
  update [FAHESVIS].[dbo].[System_Lookups_Values]
  set  Lk_Code_Value = 0		
  where Lk_Code = 79 and Lk_Code_Value = 2
===============================================================


ALTER FUNCTION [dbo].[FN_Global_GetUserAssignPositionDetails]
(	
	@User_Id		INT,
	@Station_Id		INT = NULL,
	@Booth_Id		INT = NULL,
	@Lane_Id	    INT = NULL,
	@Section_Id		INT = NULL
)
RETURNS TABLE 
AS
RETURN 
(
	SELECT DISTINCT
		[Station_Id]									 AS StationId,
		dbo.FN_Global_GetStationClassificationId([Station_Id]) AS StationClassification,
		dbo.FN_Global_GetStationNameById([Station_Id])   AS StationName,
		[Lane_Id]										 AS LaneId,
		dbo.FN_Global_GetLaneNameById([Lane_Id])         AS LaneName,
		[Section_Id]									 AS SectionId,
		dbo.FN_Global_GetSectionNameById([Section_Id])	 AS SectionName,
		dbo.FN_Global_GetSectionClassificationId([Section_Id]) AS SectionClassification,
		[Booth_Id]										 AS BoothId,
		dbo.FN_Global_GetBoothNameById([Booth_Id])	     AS BoothName
	FROM [dbo].[Users_Assign_Position]
	WHERE  
	[Is_DeletedStatus] = 0  AND
	[User_Id] = @User_Id   
	  
		AND (@Station_Id IS NULL OR [Station_Id] = @Station_Id)
        AND (@Section_Id IS NULL OR [Section_Id] = @Section_Id)
        AND (@Booth_Id IS NULL OR [Booth_Id] = @Booth_Id)
        AND (@Lane_Id IS NULL OR [Lane_Id] = @Lane_Id)

)


==================================================================
ALTER FUNCTION [dbo].[FN_Core_IsSupervisor] (@user_id INT)
RETURNS BIT
AS
BEGIN
    DECLARE @is_supervisor BIT;
    
    -- Initialize the output variable
    SET @is_supervisor = 0;

    -- Check if the user is a supervisor
    IF EXISTS (SELECT 1 FROM dbo.Users_Roles WHERE user_id = @user_id AND Role_Id = 2)
    BEGIN
        SET @is_supervisor = 1;
    END

    RETURN @is_supervisor;
END;

================================================================

finished 

==========================================================

CREATE TABLE Logs (
    Log_ID INT PRIMARY KEY IDENTITY,
    Log_Type NVARCHAR(50),
    User_ID INT,
    Message NVARCHAR(MAX),
    DateTime DATETIME DEFAULT GETDATE(),
    Source NVARCHAR(100),
    IPAddress NVARCHAR(45)
);


create PROCEDURE SP_Global_InsertFahesLog
    @Log_Type INT,
    @User_Id INT,
    @Message NVARCHAR(MAX),
    @Source INT,
    @IPAddress NVARCHAR(45)
AS
BEGIN
    INSERT INTO  [dbo].[FAHES_Logs] (Log_Type, User_Id, Message, Created_Date, Source, IPAddress)
    

===========================================================



INSERT INTO [dbo].[System_Lookups_Values]
           ([Lk_Code]
           ,[Lk_Code_Value]
           ,[Lk_Value_Aname]
           ,[Lk_Value_Ename]
           ,[Enabled_Flag]
           ,[LK_Index] )
     VALUES
           (82
           ,1
           ,'Error'
           ,'Error'
           ,1
           , 1)
GO





INSERT INTO [dbo].[System_Lookups_Values]
           ([Lk_Code]
           ,[Lk_Code_Value]
           ,[Lk_Value_Aname]
           ,[Lk_Value_Ename]
           ,[Enabled_Flag]
           ,[LK_Index] )
     VALUES
           (82
           ,2
           ,'Warning'
           ,'Warning'
           ,1
           , 1)
GO




INSERT INTO [dbo].[System_Lookups_Values]
           ([Lk_Code]
           ,[Lk_Code_Value]
           ,[Lk_Value_Aname]
           ,[Lk_Value_Ename]
           ,[Enabled_Flag]
           ,[LK_Index] )
     VALUES
           (82
           ,3
           ,'Information'
           ,'Information'
           ,1
           , 1)

GO



INSERT INTO [dbo].[System_Lookups_Values]
           ([Lk_Code]
           ,[Lk_Code_Value]
           ,[Lk_Value_Aname]
           ,[Lk_Value_Ename]
           ,[Enabled_Flag]
           ,[LK_Index] )
     VALUES
           (82
           ,4
           ,'Login'
           ,'Login'
           ,1
           , 1)
GO


+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


lk_code = 70 names 


  update System_Lookups_Values 
  set Lk_Value_Aname = 'MOI Application',
    Lk_Value_Ename =  'MOI Application'
  where Lk_Code = 70 and Lk_Code_Value = 3




update System_Lookups_Values 
  set Lk_Value_Aname = 'Fahes Tablet Application',
    Lk_Value_Ename =  'Fahes Tablet Application'
  where Lk_Code = 70 and Lk_Code_Value = 2


===================================================================================================================

SP_SysAdmin_GetFahesLogs

-- =============================================
-- Author:		<Thaer ALkilani>
-- Create date: <30/05/2024> 
-- Description:	get APP Logs
-- =============================================
	alter PROCEDURE [dbo].[SP_SysAdmin_GetFahesLogs]
    @Log_Id INT = NULL,
    @Log_Type INT = NULL,
    @User_Id INT = NULL,
    @Source INT = NULL,
	@username NVARCHAR(45) = NULL,
	@userFullName NVARCHAR(45) = NULL,
    @IPAddress NVARCHAR(45) = NULL,
    @Result INT OUTPUT,
    @Error_Message NVARCHAR(MAX) OUTPUT,
    @DB_Error_Message NVARCHAR(MAX) OUTPUT
AS
BEGIN
    BEGIN TRY
        SELECT
            fl.Log_Id AS LogId,
            fl.Log_Type AS LogType,
            LookupLogType.LookUpValueEn AS LogTypeDescription, 
            fl.User_Id AS UserId,
			u.username,
			u.User_Full_Name userFullName,
            fl.Message,
            fl.Created_Date AS CreatedDate,
            fl.Source,
			LookupSource.LookUpValueEn as SourceDescription,
            fl.IPAddress
        FROM
             [dbo].[FAHES_Logs] fl
          CROSS APPLY 
				dbo.Fn_Core_Get_LookUp_TBL(82, fl.Log_Type ) AS LookupLogType
		    CROSS APPLY 
				dbo.Fn_Core_Get_LookUp_TBL(70, fl.Source ) AS LookupSource
		  inner join users u on u.user_id =  fl.user_id
        WHERE
            (@Log_Id IS NULL OR fl.Log_Id = @Log_Id)
            AND (@Log_Type IS NULL OR fl.Log_Type = @Log_Type)
            AND (@User_Id IS NULL OR fl.User_Id = @User_Id)
            AND (@Source IS NULL OR fl.Source = @Source)
            AND (@IPAddress IS NULL OR fl.IPAddress LIKE '%' + @IPAddress + '%')
			AND (@username IS NULL OR u.Username LIKE '%' + @username + '%')
			AND (@userFullName IS NULL OR u.User_Full_Name LIKE '%' + @userFullName + '%')

        SET @Result = 1;  -- Indicate success
    END TRY
    BEGIN CATCH
        SET @DB_Error_Message = ERROR_MESSAGE();
        SET @Result = -1;  -- Indicate failure
        RETURN;
    END CATCH;
END;