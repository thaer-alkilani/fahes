USE [FAHESVIS]
GO
/****** Object:  StoredProcedure [dbo].[SP_Registration_GetReceiptDetails]    Script Date: 6/8/2024 11:25:18 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER PROCEDURE [dbo].[SP_Registration_GetReceiptDetails]
	@StationId INT,
    @PlateNo INT = NULL,
    @PlateType INT = NULL,
    @VINNo NVARCHAR(255) = NULL,
    @OwnerPID NVARCHAR(255) = NULL,
    @OwnerPIDType INT = NULL,
    @TotalAmount INT = NULL,
    @PaymentMethod INT = NULL,
    @CardType INT = NULL,
    @POSId INT = NULL,
    @FromDate DATETIME = NULL,
    @ToDate DATETIME = NULL,
    @ReceiptNo NVARCHAR(255) = NULL,
    @ServiceName NVARCHAR(255) = NULL,
    @PageIndex INT = 1,
    @PageSize INT = 5, 
    @Result INT OUTPUT, 
    @Error_Message NVARCHAR(MAX) OUTPUT,
    @DB_Error_Message NVARCHAR(MAX) OUTPUT,
	@TotalRecords INT = 0 OUTPUT -- Output parameter for page count


AS
BEGIN
    SET NOCOUNT ON;
 
    BEGIN TRY

	DECLARE @Offset INT = CASE WHEN @PageSize > 0 THEN (@PageIndex - 1) * @PageSize ELSE 0 END;
    DECLARE @FetchNextRows INT = CASE WHEN @PageSize > 0 THEN @PageSize ELSE 1000000 END;  
   
   WITH CTE AS (
   SELECT  
            RV.[Plate_No] AS PlateNo, 
            RV.[Plate_Type] AS PlateType, 
			[dbo].[Fn_Core_Get_LookUp](40, RV.[Plate_Type]) PlateTypeName,
            RV.[VIN_No] AS VINNo, 
            RV.[Owner_PID] AS OwnerPID, 
            RV.[Owner_Name] AS OwnerName,
            RV.[Owner_PID_Type] AS OwnerPIDType ,
            SR.Request_Id as RequestId,
            ISR.FAHES_Receipt_No AS ReceiptNo,
            [dbo].[FN_Registration_GetServiceName](SR.Service_Type, SR.Request_Id) AS ServiceName,
			[dbo].[FN_Registration_CheckIsExemptedVehicle](RV.[VIN_No]) AS IsExempted ,
			ISR.Inspection_Service_Id as InspectionServiceId,
			1 as ServiceType,
			ISR.Updated_Date As UpdatedDate,
			ISR.Created_Date AS CreatedDate,
			RI.[Total_Amount] AS TotalAmount
        FROM   [dbo].[Request_Invoice] RI 
        INNER JOIN [dbo].[Invoice_Details] ID ON ID.Invoice_Id = RI.Invoice_Id
        INNER JOIN [dbo].[Register_Vehicle] RV ON RV.Request_Id = ID.Request_Id 
        INNER JOIN [dbo].[Service_Request] SR ON SR.Request_Id = RV.Request_Id
		INNER JOIN [dbo].[Inspection_Request] ISR ON ISR.Request_Id = SR.Request_Id
        WHERE 
			SR.Station_Id = @StationId AND
			ISR.Inspection_Service_Id <> 5 AND  
			 NOT EXISTS (SELECT 1 FROM [dbo].[Exempted_Vehicles] ET WHERE ET.VIN_No = RV.VIN_No) AND
            (@PlateNo IS NULL OR RV.[Plate_No] = @PlateNo) AND
            (@PlateType IS NULL OR RV.[Plate_Type] = @PlateType) AND
            (@VINNo IS NULL OR RV.[VIN_No] LIKE '%' + @VINNo + '%') AND
            (@OwnerPID IS NULL OR RV.[Owner_PID] = @OwnerPID) AND
            (@OwnerPIDType IS NULL OR RV.[Owner_PID_Type] = @OwnerPIDType) AND  
			(@FromDate IS NULL OR RI.[Created_Date] >= @FromDate OR  RI.Updated_Date >= @FromDate) AND
            (@ToDate IS NULL OR RI.[Created_Date] <= @ToDate OR RI.Updated_Date <= @ToDate) AND
            (@ReceiptNo IS NULL OR [dbo].[Fn_Get_Receipt_No](SR.Request_Id) = @ReceiptNo) AND
            (@ServiceName IS NULL OR [dbo].[FN_Registration_GetServiceName](SR.Service_Type, SR.Request_Id) = @ServiceName) AND
            RI.[Created_Date] >= DATEADD(day, -30, GETDATE())
            AND RI.Status = 3

 
	UNION ALL
		SELECT  
            RV.[Plate_No] AS PlateNo, 
            RV.[Plate_Type] AS PlateType, 
			[dbo].[Fn_Core_Get_LookUp](40, RV.[Plate_Type]) PlateTypeName,
            RV.[VIN_No] AS VINNo, 
            RV.[Owner_PID] AS OwnerPID, 
            RV.[Owner_Name] AS OwnerName,
            RV.[Owner_PID_Type] AS OwnerPIDType ,
            SR.Request_Id as RequestId,
            [dbo].[Fn_Get_Receipt_No](SR.Request_Id) AS ReceiptNo,
            [dbo].[FN_Registration_GetServiceName](SR.Service_Type, SR.Request_Id) AS ServiceName,
			[dbo].[FN_Registration_CheckIsExemptedVehicle](RV.[VIN_No]) AS IsExempted ,
			ISR.Service_Id as InspectionServiceId,
			2 as ServiceType,
			ISR.Updated_Date As UpdatedDate,
			ISR.Created_Date AS CreatedDate,
				RI.[Total_Amount] AS TotalAmount

        FROM   [dbo].[Request_Invoice] RI 
        INNER JOIN [dbo].[Invoice_Details] ID ON ID.Invoice_Id = RI.Invoice_Id
        INNER JOIN [dbo].[Register_Vehicle] RV ON RV.Request_Id = ID.Request_Id 
        INNER JOIN [dbo].[Service_Request] SR ON SR.Request_Id = RV.Request_Id
		INNER JOIN  Vin_Stamping_Requests ISR ON ISR.Request_Id = SR.Request_Id
        WHERE SR.Station_Id = @StationId AND
            (@PlateNo IS NULL OR RV.[Plate_No] = @PlateNo) AND
            (@PlateType IS NULL OR RV.[Plate_Type] = @PlateType) AND
            (@VINNo IS NULL OR RV.[VIN_No] LIKE '%' + @VINNo + '%') AND
            (@OwnerPID IS NULL OR RV.[Owner_PID] = @OwnerPID) AND
            (@OwnerPIDType IS NULL OR RV.[Owner_PID_Type] = @OwnerPIDType) AND  
            (@FromDate IS NULL OR RI.[Created_Date] >= @FromDate OR  RI.Updated_Date >= @FromDate) AND
            (@ToDate IS NULL OR RI.[Created_Date] <= @ToDate OR RI.Updated_Date <= @ToDate) AND
            (@ReceiptNo IS NULL OR [dbo].[Fn_Get_Receipt_No](SR.Request_Id) = @ReceiptNo) AND
            (@ServiceName IS NULL OR [dbo].[FN_Registration_GetServiceName](SR.Service_Type, SR.Request_Id) = @ServiceName) AND
            RI.[Created_Date] >= DATEADD(day, -30, GETDATE())
            AND RI.Status = 3

	    UNION ALL
			SELECT  
            RV.[Plate_No] AS PlateNo, 
            RV.[Plate_Type] AS PlateType, 
			[dbo].[Fn_Core_Get_LookUp](40, RV.[Plate_Type]) PlateTypeName,
            RV.[VIN_No] AS VINNo, 
            RV.[Owner_PID] AS OwnerPID, 
            RV.[Owner_Name] AS OwnerName,
            RV.[Owner_PID_Type] AS OwnerPIDType ,
            SR.Request_Id as RequestId,
            [dbo].[Fn_Get_Receipt_No](SR.Request_Id) AS ReceiptNo,
            [dbo].[FN_Registration_GetServiceName](SR.Service_Type, SR.Request_Id) AS ServiceName,
			[dbo].[FN_Registration_CheckIsExemptedVehicle](RV.[VIN_No]) AS IsExempted ,
			ISR.Tanker_Cert_Service_Id as InspectionServiceId,
			3 as ServiceType,
			ISR.Updated_Date As UpdatedDate,
			ISR.Created_Date AS CreatedDate,
				RI.[Total_Amount] AS TotalAmount

        FROM   [dbo].[Request_Invoice] RI 
        INNER JOIN [dbo].[Invoice_Details] ID ON ID.Invoice_Id = RI.Invoice_Id
        INNER JOIN [dbo].[Register_Vehicle] RV ON RV.Request_Id = ID.Request_Id 
        INNER JOIN [dbo].[Service_Request] SR ON SR.Request_Id = RV.Request_Id
		INNER JOIN Tanker_Cert_Request ISR ON ISR.Request_Id = SR.Request_Id
        WHERE SR.Station_Id = @StationId AND
            (@PlateNo IS NULL OR RV.[Plate_No] = @PlateNo) AND
            (@PlateType IS NULL OR RV.[Plate_Type] = @PlateType) AND
            (@VINNo IS NULL OR RV.[VIN_No] LIKE '%' + @VINNo + '%') AND
            (@OwnerPID IS NULL OR RV.[Owner_PID] = @OwnerPID) AND
            (@OwnerPIDType IS NULL OR RV.[Owner_PID_Type] = @OwnerPIDType) AND  
            (@FromDate IS NULL OR RI.[Created_Date] >= @FromDate OR  RI.Updated_Date >= @FromDate) AND
            (@ToDate IS NULL OR RI.[Created_Date] <= @ToDate OR RI.Updated_Date <= @ToDate) AND
            (@ReceiptNo IS NULL OR [dbo].[Fn_Get_Receipt_No](SR.Request_Id) = @ReceiptNo) AND
            (@ServiceName IS NULL OR [dbo].[FN_Registration_GetServiceName](SR.Service_Type, SR.Request_Id) = @ServiceName) AND
            RI.[Created_Date] >= DATEADD(day, -30, GETDATE())
            AND RI.Status = 3
 )

     SELECT *, ROW_NUMBER() OVER (ORDER BY RequestId DESC) AS RowNumber INTO #TempTable
        FROM CTE
		;

        -- Calculate PageCount
        SELECT @TotalRecords = COUNT(*)  
        FROM #TempTable;

        -- Query from temporary table for pagination
        SELECT *
        FROM #TempTable
        WHERE RowNumber > @Offset AND RowNumber <= @Offset + @FetchNextRows
		ORDER BY UpdatedDate DESC  , CreatedDate DESC ;


        SET @Result = 1;
    END TRY
 
    BEGIN CATCH 
        SET @DB_Error_Message = ERROR_MESSAGE(); 
        SET @Result = 0;
    END CATCH; 
END;

+++++++++++++++++++++++++++++++++++++++++=====================================================================================


USE [FAHESVIS]
GO
/****** Object:  StoredProcedure [dbo].[SP_BO_GetReceiptDetails]    Script Date: 6/8/2024 11:25:44 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER PROCEDURE [dbo].[SP_BO_GetReceiptDetails]
    @StationId INT,
    @PlateNo INT = NULL,
    @PlateType INT = NULL,
    @VINNo NVARCHAR(255) = NULL,
    @OwnerPID NVARCHAR(255) = NULL,
    @OwnerPIDType INT = NULL,
    @TotalAmount INT = NULL,
    @PaymentMethod INT = NULL,
    @CardType INT = NULL,
    @POSId INT = NULL,
    @FromDate DATETIME = NULL,
    @ToDate DATETIME = NULL,
    @ReceiptNo NVARCHAR(255) = NULL,
    @ServiceName NVARCHAR(255) = NULL,
    @PageIndex INT = 1,
    @PageSize INT = 5, 
    @Result INT OUTPUT, 
    @Error_Message NVARCHAR(MAX) OUTPUT,
    @DB_Error_Message NVARCHAR(MAX) OUTPUT,
    @TotalRecords INT = 0 OUTPUT -- Output parameter for page count

AS
BEGIN
    SET NOCOUNT ON;

    BEGIN TRY
        DECLARE @Offset INT = CASE WHEN @PageSize > 0 THEN (@PageIndex - 1) * @PageSize ELSE 0 END;
        DECLARE @FetchNextRows INT = CASE WHEN @PageSize > 0 THEN @PageSize ELSE 1000000 END;  

        ;WITH CTE AS (
            SELECT  
                RV.[Plate_No] AS PlateNo, 
                RV.[Plate_Type] AS PlateType, 
                [dbo].[Fn_Core_Get_LookUp](40, RV.[Plate_Type]) AS PlateTypeName,
                RV.[VIN_No] AS VINNo, 
                RV.[Owner_PID] AS OwnerPID, 
                RV.[Owner_Name] AS OwnerName,
                RV.[Owner_PID_Type] AS OwnerPIDType,
                SR.Request_Id AS RequestId,
                [dbo].[Fn_Get_Receipt_No](SR.Request_Id) AS ReceiptNo,
                [dbo].[FN_Registration_GetServiceName](SR.Service_Type, SR.Request_Id) AS ServiceName,
                [dbo].[FN_Registration_CheckIsExemptedVehicle](RV.[VIN_No]) AS IsExempted,
                ISR.Inspection_Service_Id AS InspectionServiceId,
                1 AS ServiceType,
                NULL AS UpdatedDate,
                NULL AS CreatedDate,
                NULL AS TotalAmount
            FROM [dbo].[Request_Invoice] RI 
            INNER JOIN [dbo].[Invoice_Details] ID ON ID.Invoice_Id = RI.Invoice_Id
            INNER JOIN [dbo].[Register_Vehicle] RV ON RV.Request_Id = ID.Request_Id 
            INNER JOIN [dbo].[Service_Request] SR ON SR.Request_Id = RV.Request_Id
            INNER JOIN [dbo].[Inspection_Request] ISR ON ISR.Request_Id = SR.Request_Id
            WHERE 
                SR.Station_Id = @StationId AND
                (ISR.Inspection_Service_Id = 1 AND EXISTS (SELECT 1 FROM [dbo].[Exempted_Vehicles] ET WHERE ET.VIN_No = RV.VIN_No)) AND
                (@PlateNo IS NULL OR RV.[Plate_No] = @PlateNo) AND
                (@PlateType IS NULL OR RV.[Plate_Type] = @PlateType) AND
                (@VINNo IS NULL OR RV.[VIN_No] LIKE '%' + @VINNo + '%') AND
                (@OwnerPID IS NULL OR RV.[Owner_PID] = @OwnerPID) AND
                (@OwnerPIDType IS NULL OR RV.[Owner_PID_Type] = @OwnerPIDType) AND  
                (@FromDate IS NULL OR RI.[Created_Date] >= @FromDate) AND
                (@ToDate IS NULL OR RI.[Created_Date] <= @ToDate) AND
                (@ReceiptNo IS NULL OR [dbo].[Fn_Get_Receipt_No](SR.Request_Id) = @ReceiptNo) AND
                (@ServiceName IS NULL OR [dbo].[FN_Registration_GetServiceName](SR.Service_Type, SR.Request_Id) = @ServiceName) AND
                RI.[Created_Date] >= DATEADD(day, -30, GETDATE()) AND
                RI.Status = 3

            UNION ALL

            SELECT 
                '' AS PlateNo, 
                '' AS PlateType, 
                '' AS PlateTypeName,
                '' AS VINNo, 
                '' AS OwnerPID, 
                '' AS OwnerName,
                '' AS OwnerPIDType,
                ID.Request_Id AS RequestId,
                [dbo].[Fn_Get_Receipt_No](ID.Request_Id) AS ReceiptNo,
                'External Inspection' AS ServiceName,
                0 AS IsExempted,
                5 AS InspectionServiceId,
                1 AS ServiceType,
                RI.Updated_Date AS UpdatedDate,
                RI.Created_Date AS CreatedDate,
                RI.[Total_Amount] AS TotalAmount
            FROM [dbo].[Request_Invoice] RI 
            INNER JOIN [dbo].[Invoice_Details] ID ON ID.Invoice_Id = RI.Invoice_Id
            LEFT JOIN [dbo].[Service_Request] SR ON SR.Request_Id = ID.Request_Id
            WHERE 
                ID.Request_Id IN (
                    SELECT DISTINCT Request_Ref_ID 
                    FROM [dbo].[Service_Request] 
                    WHERE Request_Id IN (
                        SELECT Request_Id 
                        FROM [dbo].[Inspection_Request] 
                        WHERE Inspection_Service_Id = 5 
                    )
                ) AND
                SR.Station_Id = @StationId AND
                (@FromDate IS NULL OR RI.[Created_Date] >= @FromDate) AND
                (@ToDate IS NULL OR RI.[Created_Date] <= @ToDate) AND
                (@ServiceName IS NULL OR [dbo].[FN_Registration_GetServiceName](SR.Service_Type, SR.Request_Id) = @ServiceName) AND
                RI.[Created_Date] >= DATEADD(day, -30, GETDATE()) AND
                RI.Status = 3
        )

        SELECT *, ROW_NUMBER() OVER (ORDER BY RequestId DESC) AS RowNumber INTO #TempTable
        FROM CTE;

        -- Calculate PageCount
        SELECT @TotalRecords = COUNT(*) 
        FROM #TempTable;

        -- Query from temporary table for pagination
        SELECT *
        FROM #TempTable
        WHERE RowNumber > @Offset AND RowNumber <= @Offset + @FetchNextRows;

        SET @Result = 1;
    END TRY
    BEGIN CATCH 
        SET @DB_Error_Message = ERROR_MESSAGE(); 
        SET @Result = 0;
    END CATCH; 
END;
