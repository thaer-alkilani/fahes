USE [FAHESVIS]
GO
/****** Object:  StoredProcedure [dbo].[SP_Supervisor_GetFinishedInprogressInspectionDetailsByRequestId]    Script Date: 6/9/2024 12:00:26 AM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author: Thaer Alkilani
-- Create date: 24/3/2024 
-- Description:	retrieve Inspection Deatils by RrquestId - MOI
-- ============================================= 
ALTER PROCEDURE [dbo].[SP_Supervisor_GetFinishedInprogressInspectionDetailsByRequestId]
	@Request_Id							INT, 
	@Result								INT			 OUTPUT, 
	@Error_Message						NVARCHAR(MAX) OUTPUT,--This Variable Used For Validation Error Messages
	@DB_Error_Message					NVARCHAR(MAX) OUTPUT--This Variable Used For Database Error Messages
AS
BEGIN
   BEGIN TRY 
    
	select 
	IR.[Inspection_Req_Id]						AS	InspectionReqId ,
	IR.[Request_Id]								AS	RequestId,
	IR.[FAHES_Receipt_No]						AS	FahesReceiptNo,
	IR.[Inspection_Service_Id]					AS	InspectionServiceId,
	IR.[Plate_No]								AS	PlateNo,
	IR.[Plate_Type]								AS	PlateType,
	IR.[VIN_No]									AS	VinNo,
	(CASE WHEN 
	IST.[Inspection_Type] = 1 --FULL
	THEN 'True' ELSE 'FALSE' END )              AS  IsSectionSeqRequired,
	IST.Service_Id								AS	ServiceId,
	IST.Service_Name							AS	ServiceName,
	IST.[Service_Type]							AS	ServiceType,
	RV.Color_Id									AS	ColorId,
	RV.Sub_Color_Id								AS	SubColorId,
	RV.Category_Id								AS	CategoryId,
	VC.Description_En							AS VehicleCategoryValue,
	VC.Description_Ar							AS VehicleCategoryValueAr,
	RV.Vehicle_Model_Id							AS	VehicleModelId,
	VM.Model_Ename								AS	ModelEname,
	RV.Manufacturer_Id							AS	ManufacturerId,
	M.Manufacturers_Ename						AS	ManufacturersEname,
	RV.Manufacturer_Year						AS	ManufacturerYear,
	RV.MOI_Registration_Date					AS	MOIRegistrationDate,
	RV.Cylinders								AS	Cylinders,
	RV.Weight									AS	Weight,
	RV.Payload_Weight							AS	PayloadWeight,
	RV.Shape_Code								AS	ShapeCode,
	RV.No_Of_Seat								AS	NoOfSeat,
	RV.License_Expiry_Date						AS	LicenseExpiryDate,
	RV.Owner_Type								AS	OwnerType,
	RV.Contact_Person_PID						AS	ContactPersonPID,
	RV.Contact_Person_Email						AS	ContactPersonEmail,
	RV.Contact_Person_Phone						AS	ContactPersonPhone,
	RV.Owner_Id									AS	OwnerId,
	RV.Owner_PID								AS	OwnerPID,
	RV.Owner_Name								AS	OwnerName,
	SR.Station_Id								As StationId,
	SD.Station_Name_Ar							as StationNameAr,
	SD.Station_Name_En							as StationNameEn,
	[dbo].[Fn_Core_Get_LookUp](40, 	IR.[Plate_Type]) AS PlateTypeName ,
	[dbo].[Fn_Core_Get_LookUp_Ar](40, 	IR.[Plate_Type]) AS PlateTypeNameAr ,
	IR.[Final_Result]							as FinalResult,
	[dbo].[Fn_Core_Get_LookUp](47, 	IR.[Final_Result]) AS FinalResultValue  ,
	[dbo].[FN_Get_Inspection_Step_Id_BY_Request_Id](IR.[Request_Id]) as InspectionStepId,
	[dbo].[FN_Get_Section_Id_BY_Request_Id](IR.[Request_Id]) as SectionId,
		CASE 
        WHEN DATEDIFF(day, IR.created_date, GETDATE()) < 30 THEN 1 
        ELSE 0 
    END AS IsEditableIspection

from  [dbo].[Service_Request] SR
inner join 
	[dbo].[Inspection_Request] IR on  IR.Request_Id = SR.Request_Id
inner join 
	[dbo].[Inspection_Service_Types] IST on IST.Service_Id = IR.Inspection_Service_Id  and IST.Include_MOI_Report = 1
inner join
	[dbo].[Register_Vehicle] RV	on RV.Request_Id = IR.Request_Id
left join 
	[dbo].[Lanes_Def] LD1 on LD1.[Lane_Id] = IR.[Assign_Lane_Id]
left join 
	[dbo].[Manufacturers] M on M.[Manufacturers_Id] = RV.[Manufacturer_Id]
left join 
	[dbo].[Vehicle_Models] VM on VM.[Model_Id] = RV.[Vehicle_Model_Id]
left join  
	[dbo].[Station_Def] SD on SD.Station_Id = SR.Station_Id
left join  
	[dbo].[Vehicle_Categories]  VC on VC.Category_Id = RV.Category_Id
WHERE 
	IR.[Status] In (1,3,4) AND 
	SR.[Status] in (8 , 4) AND
	IR.Request_Id = @Request_Id  
order by IR.created_date desc
 
    SET @Result = @@ROWCOUNT;

   if @Result = 0 
	begin 
            SET @Error_Message = 'There is no inspection request for this vehicle'; 

        SET @Result = 0; 
        RETURN;
	end

  END TRY 

    BEGIN CATCH 
        SET @DB_Error_Message = ERROR_MESSAGE(); 
    END CATCH; 
END


 
 
/////////////////////////////////////////////////////////////////////////////////////////////////////





USE [FAHESVIS]
GO
/****** Object:  StoredProcedure [dbo].[SP_Supervisor_GetFinishedInprogressInspectionDetailsByReceiptNO]    Script Date: 6/9/2024 12:00:16 AM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author: Thaer Alkilani
-- Create date: 24/3/2024 
-- Description:	retrieve Inspection Deatils by ReceiptNO - MOI
-- ============================================= 
ALTER PROCEDURE [dbo].[SP_Supervisor_GetFinishedInprogressInspectionDetailsByReceiptNO]
	@ReceiptNO						    NVARCHAR(MAX), 
	@Result								INT			 OUTPUT, 
	@Error_Message						NVARCHAR(MAX) OUTPUT,--This Variable Used For Validation Error Messages
	@DB_Error_Message					NVARCHAR(MAX) OUTPUT--This Variable Used For Database Error Messages
AS
BEGIN
   BEGIN TRY 
    
	select  
	IR.[Inspection_Req_Id]						AS	InspectionReqId ,
	IR.[Request_Id]								AS	RequestId,
	IR.[FAHES_Receipt_No]						AS	FahesReceiptNo,
	IR.[Inspection_Service_Id]					AS	InspectionServiceId,
	IR.[Plate_No]								AS	PlateNo,
	IR.[Plate_Type]								AS	PlateType,
	IR.[VIN_No]									AS	VinNo,
	(CASE WHEN 
	IST.[Inspection_Type] = 1 --FULL
	THEN 'True' ELSE 'FALSE' END )              AS  IsSectionSeqRequired,
	IST.Service_Id								AS	ServiceId,
	IST.Service_Name							AS	ServiceName,
	IST.[Service_Type]							AS	ServiceType,
	RV.Color_Id									AS	ColorId,
	RV.Sub_Color_Id								AS	SubColorId,
	RV.Category_Id								AS	CategoryId,
	VC.Description_En							AS VehicleCategoryValue,
	VC.Description_Ar							AS VehicleCategoryValueAr,
	RV.Vehicle_Model_Id							AS	VehicleModelId,
	VM.Model_Ename								AS	ModelEname,
	RV.Manufacturer_Id							AS	ManufacturerId,
	M.Manufacturers_Ename						AS	ManufacturersEname,
	RV.Manufacturer_Year						AS	ManufacturerYear,
	RV.MOI_Registration_Date					AS	MOIRegistrationDate,
	RV.Cylinders								AS	Cylinders,
	RV.Weight									AS	Weight,
	RV.Payload_Weight							AS	PayloadWeight,
	RV.Shape_Code								AS	ShapeCode,
	RV.No_Of_Seat								AS	NoOfSeat,
	RV.License_Expiry_Date						AS	LicenseExpiryDate,
	RV.Owner_Type								AS	OwnerType,
	RV.Contact_Person_PID						AS	ContactPersonPID,
	RV.Contact_Person_Email						AS	ContactPersonEmail,
	RV.Contact_Person_Phone						AS	ContactPersonPhone,
	RV.Owner_Id									AS	OwnerId,
	RV.Owner_PID								AS	OwnerPID,
	RV.Owner_Name								AS	OwnerName,
	SR.Station_Id								As StationId,
	SD.Station_Name_Ar							as StationNameAr,
	SD.Station_Name_En							as StationNameEn,
	[dbo].[Fn_Core_Get_LookUp](40, 	IR.[Plate_Type]) AS PlateTypeName ,
	[dbo].[Fn_Core_Get_LookUp_Ar](40, 	IR.[Plate_Type]) AS PlateTypeNameAr ,
	IR.[Final_Result]							as FinalResult,
	[dbo].[Fn_Core_Get_LookUp](47, 	IR.[Final_Result]) AS FinalResultValue  ,
	[dbo].[FN_Get_Inspection_Step_Id_BY_Request_Id](IR.[Request_Id]) as InspectionStepId,
	[dbo].[FN_Get_Section_Id_BY_Request_Id](IR.[Request_Id]) as SectionId,
		CASE 
        WHEN DATEDIFF(day, IR.created_date, GETDATE()) < 30 THEN 1 
        ELSE 0 
    END AS IsEditableIspection

from  [dbo].[Service_Request] SR
inner join 
	[dbo].[Inspection_Request] IR on  IR.Request_Id = SR.Request_Id
inner join 
	[dbo].[Inspection_Service_Types] IST on IST.Service_Id = IR.Inspection_Service_Id  and IST.Include_MOI_Report = 1
inner join
	[dbo].[Register_Vehicle] RV	on RV.Request_Id = IR.Request_Id
left join 
	[dbo].[Lanes_Def] LD1 on LD1.[Lane_Id] = IR.[Assign_Lane_Id]
left join 
	[dbo].[Manufacturers] M on M.[Manufacturers_Id] = RV.[Manufacturer_Id]
left join 
	[dbo].[Vehicle_Models] VM on VM.[Model_Id] = RV.[Vehicle_Model_Id]
left join  
	[dbo].[Station_Def] SD on SD.Station_Id = SR.Station_Id
left join  
	[dbo].[Vehicle_Categories]  VC on VC.Category_Id = RV.Category_Id
WHERE 
	IR.[Status] In (1,3,4) AND 
	SR.[Status] in (8 , 4) AND
 IR.[FAHES_Receipt_No] = @ReceiptNO  
order by IR.created_date desc
 
    SET @Result = @@ROWCOUNT;

   if @Result = 0 
	begin 
            SET @Error_Message = 'There is no inspection request for this receipt'; 

        SET @Result = 0; 
        RETURN;
	end

  END TRY 

    BEGIN CATCH 
        SET @DB_Error_Message = ERROR_MESSAGE(); 
    END CATCH; 
END


 
 
/////////////////////////////////////////////////////////////////////////////////////


USE [FAHESVIS]
GO
/****** Object:  StoredProcedure [dbo].[SP_Supervisor_GetFinishedInprogressInspectionDetailsByPlateNoAndPlateType]    Script Date: 6/9/2024 12:00:12 AM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author: Thaer Alkilani
-- Create date: 21/4/2024 
-- Description:	retrieve finished /inprogress Inspection Deatils 
-- ============================================= 
ALTER PROCEDURE [dbo].[SP_Supervisor_GetFinishedInprogressInspectionDetailsByPlateNoAndPlateType]
 @Plate_No							INT,
 @Plate_Type						INT,  
 @Result						    INT OUTPUT, 
 @Error_Message					    NVARCHAR(MAX) OUTPUT ,
 @DB_Error_Message					NVARCHAR(MAX) OUTPUT--This Variable Used For Database Error Messages

AS
BEGIN
   BEGIN TRY 

	DECLARE @IsVehicleExist INT = (
		SELECT TOP(1) 1 FROM [dbo].[Register_Vehicle] WHERE Plate_No = @Plate_No and @Plate_Type = @Plate_Type
	 )
	  
	 IF @IsVehicleExist IS NULL 
	 BEGIN 
                SET @Error_Message = 'Vehicle with plate number ' + CAST(@Plate_No AS NVARCHAR) + ' does not exist.'; 

            SET @Result = 0; 
            RETURN;
	 END;

 		
	select  
		IR.[Inspection_Req_Id]						AS	InspectionReqId ,
		IR.[Request_Id]								AS	RequestId,
		IR.[FAHES_Receipt_No]						AS	FahesReceiptNo,
		IR.[Inspection_Service_Id]					AS	InspectionServiceId,
		IR.[Plate_No]								AS	PlateNo,
		IR.[Plate_Type]								AS	PlateType,
		IR.[VIN_No]									AS	VinNo,
		(CASE WHEN 
		IST.[Inspection_Type] = 1 --FULL
		THEN 'True' ELSE 'FALSE' END )              AS  IsSectionSeqRequired,
		IST.Service_Id								AS	ServiceId,
		IST.Service_Name							AS	ServiceName,
		IST.[Service_Type]							AS	ServiceType,
		RV.Color_Id									AS	ColorId,
		RV.Sub_Color_Id								AS	SubColorId,
		RV.Category_Id								AS	CategoryId,
		VC.Description_En							AS VehicleCategoryValue,
		VC.Description_Ar							AS VehicleCategoryValueAr,
		RV.Vehicle_Model_Id							AS	VehicleModelId,
		VM.Model_Ename								AS	ModelEname,
		RV.Manufacturer_Id							AS	ManufacturerId,
		M.Manufacturers_Ename						AS	ManufacturersEname,
		RV.Manufacturer_Year						AS	ManufacturerYear,
		RV.MOI_Registration_Date					AS	MOIRegistrationDate,
		RV.Cylinders								AS	Cylinders,
		RV.Weight									AS	Weight,
		RV.Payload_Weight							AS	PayloadWeight,
		RV.Shape_Code								AS	ShapeCode,
		RV.No_Of_Seat								AS	NoOfSeat,
		RV.License_Expiry_Date						AS	LicenseExpiryDate,
		RV.Owner_Type								AS	OwnerType,
		RV.Contact_Person_PID						AS	ContactPersonPID,
		RV.Contact_Person_Email						AS	ContactPersonEmail,
		RV.Contact_Person_Phone						AS	ContactPersonPhone,
		RV.Owner_Id									AS	OwnerId,
		RV.Owner_PID								AS	OwnerPID,
		RV.Owner_Name								AS	OwnerName,
		SR.Station_Id								As StationId,
		SD.Station_Name_Ar							as StationNameAr,
		SD.Station_Name_En							as StationNameEn,
		[dbo].[Fn_Core_Get_LookUp](40, 	IR.[Plate_Type]) AS PlateTypeName ,
		[dbo].[Fn_Core_Get_LookUp_Ar](40, 	IR.[Plate_Type]) AS PlateTypeNameAr ,
		IR.[Final_Result]							as FinalResult,
		[dbo].[Fn_Core_Get_LookUp](47, 	IR.[Final_Result]) AS FinalResultValue ,
		[dbo].[FN_Get_Inspection_Step_Id_BY_Request_Id](IR.[Request_Id]) as InspectionStepId,
		[dbo].[FN_Get_Section_Id_BY_Request_Id](IR.[Request_Id]) as SectionId,
	CASE 
        WHEN DATEDIFF(day, IR.created_date, GETDATE()) < 30 THEN 1 
        ELSE 0 
    END AS IsEditableIspection

	from  [dbo].[Service_Request] SR
	inner join 
		[dbo].[Inspection_Request] IR on  IR.Request_Id = SR.Request_Id
	inner join 
		[dbo].[Inspection_Service_Types] IST on IST.Service_Id = IR.Inspection_Service_Id  and IST.Include_MOI_Report = 1
	inner join
		[dbo].[Register_Vehicle] RV	on RV.Request_Id = IR.Request_Id
	left join 
		[dbo].[Lanes_Def] LD1 on LD1.[Lane_Id] = IR.[Assign_Lane_Id]
	left join 
		[dbo].[Manufacturers] M on M.[Manufacturers_Id] = RV.[Manufacturer_Id]
	left join 
		[dbo].[Vehicle_Models] VM on VM.[Model_Id] = RV.[Vehicle_Model_Id]
	left join  
		[dbo].[Station_Def] SD on SD.Station_Id = SR.Station_Id
	left join  
		[dbo].[Vehicle_Categories]  VC on VC.Category_Id = RV.Category_Id
	WHERE
		
		IR.[Status] In (1,3,4) AND
		SR.[Status] in (8 , 4)  AND
		IR.Plate_No = @Plate_No  AND 
		IR.Plate_Type = @Plate_Type  
	order by IR.created_date desc

   SET @Result = @@ROWCOUNT;

   if @Result = 0 
	begin 
            SET @Error_Message = 'There is no inspection request for this vehicle'; 

        SET @Result = 0; 
        RETURN;
	end

END TRY 

    BEGIN CATCH 
        SET @Error_Message = ERROR_MESSAGE(); 
    END CATCH; 
END


 
 
