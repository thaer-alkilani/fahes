USE [FAHESVIS]
GO
/****** Object:  StoredProcedure [dbo].[SP_SysAdmin_GetSystemEntityRoles]    Script Date: 6/6/2024 12:48:01 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Salem Nofal>
-- Create date: <08/01/2024>
-- Reference: 32
-- Description:	get System_Entity_Roles  
-- =============================================
ALTER PROCEDURE [dbo].[SP_SysAdmin_GetSystemEntityRoles]
    @Search_Role_Id INT =null ,
    @Search_Entity_Id INT = null ,
	@Search_Entity_Desc NVARCHAR(255) = NULL,
	@Search_Entity_Name NVARCHAR(255) = NULL,
    @Result INT OUTPUT,
    @Error_Message NVARCHAR(MAX) OUTPUT
AS
BEGIN
    BEGIN TRY
        SELECT
            System_Entity_Roles.Role_Id RoleId,
            System_Entity_Roles.Entity_Id EntityId,
            System_Entity_Roles.Created_By CreatedBy,
            System_Entity_Roles.Created_Date CreatedDate,
            System_Entity_Roles.Updated_By UpdatedBy,
            System_Entity_Roles.Updated_Date UpdatedDate,
			System_Entity_Def.Status,
			 System_Entity_Def.Entity_Adesc EntityAdesc,
            System_Entity_Def.Entity_Edesc EntityEdesc,
			 System_Entity_Def.Entity_Name EntityName,
			 MD.Module_EName ModuleName
         FROM
			System_Entity_Roles
		LEFT JOIN
			System_Entity_Def ON System_Entity_Def.Entity_Id = System_Entity_Roles.Entity_Id
		LEFT JOIN
			Modules_Def MD ON MD.Module_Id =   System_Entity_Def.Module_Id
		 
        WHERE
		System_Entity_Roles.Entity_Id = System_Entity_Def.Entity_Id
           and  Role_Id = isnull(@Search_Role_Id,Role_Id)
            AND System_Entity_Roles.Entity_Id = isnull(@Search_Entity_Id,System_Entity_Roles.Entity_Id)
			and  (
                @Search_Entity_Desc IS NULL
                OR Entity_Adesc LIKE '%' + @Search_Entity_Desc + '%'
                OR Entity_Edesc LIKE '%' + @Search_Entity_Desc + '%'
            ) AND (@Search_Entity_Name IS NULL OR Entity_Name LIKE '%' + @Search_Entity_Name + '%');

        SET @Result = @@ROWCOUNT;
    END TRY
    BEGIN CATCH
        SET @Error_Message = ERROR_MESSAGE();
        SET @Result = -1; -- Set @Result to -1 to indicate an error
    END CATCH;
END;

================================

Receipt

==================================
 USE [FAHESVIS]
GO
/****** Object:  UserDefinedFunction [dbo].[FN_AppAdmin_GetMainVisualDefects]    Script Date: 6/8/2024 11:04:14 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Hamza Ali>
-- Create date: <19/11/2023>
-- Description:	<Return main visual defects >
-- =============================================
ALTER FUNCTION [dbo].[FN_AppAdmin_GetMainVisualDefects]
(	 
	@Name_En		NVARCHAR(MAX) NULL
)
RETURNS TABLE 
AS
RETURN 
(
  SELECT  DISTINCT  TOP 100000  
	   DMC.[Main_Defect_Id] as MainDefectId
      ,DMC.[Defect_Name_En] as DefectNameEn
      ,DMC.[Defect_Name_Ar] as DefectNameAr
      ,DMC.[Status]
  FROM 
  [dbo].[Defect_Main_Category] DMC 
  WHERE  (DMC.[Defect_Name_En] LIKE '%' + @Name_En + '%' OR @Name_En IS NULL) 
  And DMC.[Status] =1
  ORDER BY DMC.[Main_Defect_Id] ASC
)

============================================================

ALTER FUNCTION [dbo].[FN_Inspection_GetMainVisualDefects]
(	
	@Request_Id			INT,
	@Name_En		NVARCHAR(MAX) NULL
)
RETURNS TABLE 
AS
RETURN 
(
  SELECT  DISTINCT  TOP 100000  
	   DMC.[Main_Defect_Id] as MainDefectId
      ,DMC.[Defect_Name_En] as DefectNameEn
      ,DMC.[Defect_Name_Ar] as DefectNameAr
      ,DMC.[Status]
  FROM 
  [dbo].[Defect_Main_Category] DMC
  LEFT JOIN 
  [dbo].[Defect_Comments] DC
  ON DMC.[Main_Defect_Id] = DC.[Main_Defects_Id]
  WHERE DC.[Status] =1 and
 ( 
	
    (dbo.FN_Global_GetVehicleCategoryIdByRequestId(@Request_Id) = 6 AND 1=1)
    OR
    (dbo.FN_Global_GetVehicleCategoryIdByRequestId(@Request_Id) != 6 AND DMC.[Main_Defect_Id] NOT IN(4100))
)AND
  DC.Mode = 1 -- car
   AND (DMC.[Defect_Name_En] LIKE '%' + @Name_En + '%' OR @Name_En IS NULL)
   Or (DMC.Main_Defect_Id LIKE '%' + @Name_En + '%' OR @Name_En IS NULL)
   
  ORDER BY DMC.[Main_Defect_Id] ASC
)

====================================================
USE [FAHESVIS]
GO
/****** Object:  UserDefinedFunction [dbo].[FN_Inspection_GetSubVisualDefectComments]    Script Date: 6/8/2024 11:06:22 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER FUNCTION [dbo].[FN_Inspection_GetSubVisualDefectComments]
(   
    @Main_Defect_Id            INT NULL,
    @Sub_Defect_Id             INT NULL,
    @Description_En            VARCHAR(255) = NULL,
    @Order_By_Description     VARCHAR(20) = NULL, -- 'ASC' or 'DESC'
    @Order_By_Comment_Id      VARCHAR(20) = NULL, -- 'ASC' or 'DESC' 
    @Recent                   INT = NULL
)
RETURNS TABLE 
AS
RETURN 
(
    SELECT TOP 10000 *
    FROM (
        SELECT DISTINCT
            DC.[Def_Comment_Code] AS DefCommentCode,
            DC.[Def_Comment_Id] AS DefCommentId,
            DC.[Sub_Defect_Id] AS SubDefectId,
			(
				SELECT TOP 1 Description_En As SubDefectDescriptionEn FROM
				[dbo].Defect_Sub_Category AS DS
				WHERE DS.Sub_Defect_Id = DC.[Sub_Defect_Id]
			) AS SubDefectDescriptionEn,
            DC.[Main_Defects_Id] AS MainDefectsId,
            dbo.FN_Inspection_GetDefectClassification(DC.[Main_Defects_Id], DC.[Comment_Type]) AS DefectClassification,
            DC.[Description_En] AS DescriptionEn,
            DC.[Description_Ar] AS DescriptionAr,
            DC.[Mode],
            DC.[Comment_Type] AS CommentType,
            DC.[Device_Comment] AS DeviceComment,
            DC.[Location] AS LocationValue,
            [dbo].[FN_Inspection_FindDefectLocations](DC.[location]) AS SelectedDefectLocation,
            DC.[Axle],
            DC.[Is_Remark_Required] AS IsRemarkRequired,
            DC.[Status], 
            1 AS DefectSource,
            --IR.CREATED_DATE AS CreatedDate, -- Include CreatedDate column for ordering
			DC.Created_Date as CreatedDate
        FROM 
            [dbo].[Defect_Comments] DC
       --LEFT JOIN 
         --   [dbo].[Inspection_Results] IR ON DC.Def_Comment_Id = IR.Defect_Comment_Id
        WHERE 
            (
                (@Main_Defect_Id IS NULL AND @Sub_Defect_Id IS NULL AND DC.Comment_Type = 2 )
                OR 
                (
                    @Main_Defect_Id IS NOT NULL 
                    AND @Sub_Defect_Id IS NOT NULL
                    AND DC.[Main_Defects_Id] = @Main_Defect_Id
                    AND DC.[Sub_Defect_Id] = @Sub_Defect_Id
                )
            )
            AND (DC.[Description_En] LIKE '%' + @Description_En + '%' OR @Description_En IS NULL)
			AND DC.Status = 1
        ) AS Subquery
    ORDER BY 
        CASE WHEN @Order_By_Description = 'ASC' THEN DescriptionEn END ASC, -- SUBSTRING(DescriptionEn, CHARINDEX('3D', DescriptionEn) + LEN('3D') + 1, LEN(DescriptionEn)) END ASC,
        CASE WHEN @Order_By_Description = 'DESC' THEN SUBSTRING(DescriptionEn, CHARINDEX('3D', DescriptionEn) + LEN('3D') + 1, LEN(DescriptionEn)) END DESC,
        CASE WHEN @Order_By_Comment_Id = 'ASC' THEN DefCommentId END ASC,
        CASE WHEN @Order_By_Comment_Id = 'DESC' THEN DefCommentId END DESC,
        CASE WHEN @Recent IS NOT NULL THEN CreatedDate END DESC
);
================================================================

ALTER FUNCTION [dbo].[FN_Inspection_GetSubVisualDefects]
(	
	@Main_Defect_Id		INT,
	@Description_En		NVARCHAR(MAX) NULL
)
RETURNS TABLE 
AS
RETURN 
(
  SELECT      
	   [Sub_Defect_Id] AS SubDefectId
      ,[Main_Defects_Id] AS MainDefectsId
      ,[Description_En] AS DescriptionEn
      ,[Description_Ar] AS DescriptionAr
      ,[Status]
  FROM 
  [dbo].[Defect_Sub_Category] DSC
  Where DSC.[Main_Defects_Id]= @Main_Defect_Id   
 AND (DSC.[Description_En] LIKE '%' + @Description_En + '%' OR @Description_En IS NULL)
 And [Status] = 1
)
