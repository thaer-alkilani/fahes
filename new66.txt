alter PROCEDURE [dbo].[SP_Supervisor_UpdateBrakeResultsLog]
    @RequestId                     INT,
    @InspectionReqId               INT,
    @BrakeReadType                 INT,
    @LeftValue                     DECIMAL(18, 3) = NULL,
    @RightValue                    DECIMAL(18, 3) = NULL,
    @Weight                        DECIMAL(18, 3) = NULL,
    @MaxDifference                 INT = NULL,
    @ActualDifference              INT = NULL,
    @MinDeceleration               INT = NULL,
    @ActualDeceleration            INT = NULL,  
    @Result                        INT OUTPUT,
    @Error_Message                  NVARCHAR(MAX) OUTPUT, -- This Variable Used For Validation Error Messages
    @DB_Error_Message                NVARCHAR(MAX) OUTPUT  -- This Variable Used For Database Error Messages
AS
BEGIN
    BEGIN TRANSACTION; -- Start the transaction

    BEGIN TRY
        -- Check if the record with the given keys exists
        IF EXISTS (SELECT 1 FROM [dbo].[Brake_Results_Log] 
                   WHERE Request_Id = @RequestId 
                   AND Inspection_Req_Id = @InspectionReqId 
                   AND Brake_Read_Type = @BrakeReadType)
        BEGIN
            UPDATE [dbo].[Brake_Results_Log]
            SET 
                Left_Value = @LeftValue,
                Right_Value = @RightValue,
                Weight = @Weight,
                Max_Difference = @MaxDifference,
                Actual_Difference = @ActualDifference,
                Min_Deceleration = @MinDeceleration,
                Actual_Deceleration = @ActualDeceleration
            WHERE 
                Request_Id = @RequestId 
                AND Inspection_Req_Id = @InspectionReqId 
                AND Brake_Read_Type = @BrakeReadType;

            SET @Result = 1;
        END
        ELSE
        BEGIN
            SET @Error_Message = 'Record with Request_Id ' + CAST(@RequestId AS NVARCHAR(255)) 
                                + ', Inspection_Req_Id ' + CAST(@InspectionReqId AS NVARCHAR(255)) 
                                + ', and Brake_Read_Type ' + CAST(@BrakeReadType AS NVARCHAR(255)) + ' does not exist.';
            SET @Result = 0;
            ROLLBACK;  
            RETURN;
        END
    END TRY

    BEGIN CATCH
        SET @DB_Error_Message = ERROR_MESSAGE();
        SET @Result = 0;
        ROLLBACK;  
        RETURN;
    END CATCH;

    COMMIT;  
END;
